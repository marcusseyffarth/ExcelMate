<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA3V58AJ1O0ACpYrwBFYJcAIFyyACRVvwBFYJ8ALF2vAFRsigAfaLQAUmqfACRfxwAtXcoAImXAADlr
        rgApXtIAK17TACBrvgAzcK4AR3egAFlxpwA/d6UANmnFADZpxgBfeJ8AInW8AFlzrwAzbM4AO3O+ADJ5
        tgBWfp8AIXjAAFByvQBWeLAAMni+AFh1tgBTe60AaYGaACdw1AAvfL0AKWrlAChs4wBaeLoAK2ftAHqE
        mAAjeswAJHbUACdy2wAqbOgALGjwADVw3gAsafAALGrxACl32gAqb+oAOoK/AF2HqQB3ipoAMn3NAFiG
        sABng7QALHDyADKDzQArdO4AK3LyAFGJuAAseuQALXXuACtz8wAnfeEAK3rnACiF1AArhtQAR4rCAGOL
        twA0idEAUo2/AD5+5QBui7oAh5OjAGSQtgAphuAAK33yAIWVowArfvIANILnACqE6AArf/MAK3/0AH+Q
        twArgvQAKojrACaN5AB2mbYAMo/mACqJ9QB6mbkAKI/sAJScqwAqi/QAi5m1ADON7QAojvAAKov2ACmN
        8wAqjfUAKo71ACqO9gBykdcAKZH0AIKguQAolfAAgZzCACiV8QAqk/YAhKG6AFOb2AAqk/cAKJbyAIGg
        wgBbmd4AlqG5ACmW9wApmPUAKZj3ACmZ9wCUpMAApq2zAJ+suQB7ot0AlazBAJyxwwCCrtMAp7DDAJ2y
        xACts70ArbW+ALC3vgC0uMAAsrjBALK6wQC8vb4Aub3BALy+wQCvu80AtbzJALrBxgC7xM8Ax8fHALzE
        0QCvv+QAxcvQAMnN0wDL0NQAuMzkAMrQ1wC9zOUAuc7kAM3R2gDQ0tcAzNPYANTU1ADI09sA1NXWANHV
        2QDS2d4A2traANna2wDa29wAztjoANnc4gDa3eAA297hAOHi4wDj4+MA4uPkAOPl5wDj5egA5+fnAOXn
        6gDo6OgA3OfxAOrq6gDj6PMA7u7uAO3v8wDx8fEA8/PzAPLz9AD09PQA9fX1APX19gD29vYA9vb3APf3
        9wD4+PgA+vr6APv7+wD8/PwA/f39AP7+/gD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAycnJycnJycnJycnJycnJycnJycCwmIuIl6y6yMnJycnJycnJycnJycnJycnJycnJycmoCgEL
        L0UtGRWJycnJycnJycnJycnJycnJycnJycnJyY8QNERYX3V9djnJycnJycnJycnJycnJycnJycnJycnJ
        uwA0RFhfdX0fjsnJycnJycnJycnJycnJycnJycnJycnJLDNEWF91fBO7ycnJycnJycnJycnJycnJycnJ
        ycnJycmUBURYX3VcU8fJycnJycnJycnJycnJycnJycnJyMnJycYDRFhfdSejycnJycnJycnJycnJycnJ
        ycnAin5wd4KSwmIpWF9tHsXJycnJycnJycnJycnJycnJyRQrQFhnem84rwdYX1F/ycnJycnJycnJycnJ
        ycnJycnJWTFAWGd6e3PFGFJfErTJycnJycnJycnJycnJycnJycmeD0BYZ3pHpcmHJl8lycnJycnJycnJ
        ycnJycnJycnJyL8gQFhnekzCybIOLo3JycnJycnJycnJycnJycnJycnJyGQ2WGdhg8nJyU8IycnJycnJ
        ycnJycnJycnJycnJycnJnxtYZz6rycnJycnJycnJycnJycnJycnJycnJycnJycnAIVdjO73JycnJycnJ
        ycnJycnJycnJycnJycnJycnJycmQRlaAyMnJycnJycnJycnJycnJycnJycnJycnJycmzGgINER1dwcnJ
        ycnJycnJycnJycnJycnJycnJycnJyaoMPQQJfEm8ycnJycnJycnJycnJycnJycnJycnJycnJwyo9WGtx
        bsnJycnJycnJycnJycnJycnJycnJycnJycnJeShYa0igycnJycnJycnJycnJycnJycnJycnJycnJycmn
        F1hqQcDJycnJycnJycnJycnJycnJycnJycnJycnJycU8VFuGycnJycnJycnJycnJycnJycnJycnJycSm
        oaG7yZFCOq3JycnJycnJycnJycnJycnJycnJycnIBjJVXjeZuxxKyMnJycnJycnJycnJycnJycnJycnJ
        yckjPVpyS67Jk6TJycnJycnJycnJycnJycnJybecnbXHyYUwWnJQycnJycnJycnJycnJycnJycnJycnJ
        bD9odL7JsRZaZozJycnJycnJycnJycnJycnJycnJycmWQ2mEw8nGTloiwsnJycnJycnJycnJycnJycnJ
        ycnJyblNZaLJycmVNWDJycnJycnJycnJycnJycnJycnJycnJyYF4x8nJybgkm8nJycnJycnJycnJycnJ
        ycnJycnJycnJqZrJycnJybbGycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJ
        ycnJycnJycnJyQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>